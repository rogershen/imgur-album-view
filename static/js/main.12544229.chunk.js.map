{"version":3,"sources":["ReactDropdown.js","ImgurAccordion.js","Utils.js","ImgurGrid.js","ImgurAlbums.js","Callback.js","ImgurAlbumViewWaterfall.js","ImgurAlbumView.js","App.js","serviceWorker.js","index.js"],"names":["ReactDropdown","title","this","props","variant","currentEventKey","valueSetter","items","i","dropdownItems","iter","length","item","push","Dropdown","Item","onSelect","eventKey","String","key","active","DropdownButton","id","React","Component","ImgurVerticallyCenteredModal","Modal","size","aria-labelledby","animation","Body","Image","src","image","link","className","Footer","Button","onClick","onHide","ImgurAccordion","imgur","OAuth","authorization_url","updateWindowDimensions","setState","screenWidth","window","innerWidth","getAccessHeaders","accessToken","getAccessToken","fetchAlbum","albumHash","url","fetch","headers","handleAlbumClick","e","preventDefault","then","res","json","result","currAlbum","data","scrollIntoView","document","getElementById","error","console","log","generateImageBlocks","images","cols","state","colIter","imageCols","map","imageCol","Col","xs","md","lg","Math","random","toString","slice","Fragment","Card","Img","show","addEventListener","removeEventListener","albums","cards","album","includes","accordion","getElementsByClassName","children","classList","remove","Accordion","Toggle","as","Header","Container","Row","Figure","width","height","cover","fluid","Collapse","Text","target","rel","href","Utils","a","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","ImgurGrid","generateAlbumBlocks","isWaterfall","gen4","albumCols","albumCol","numLoadedAlbums","hasMore","onscroll","debounce","innerHeight","documentElement","scrollTop","offsetHeight","waterfall","ImgurAlbums","fetchAlbumCount","fetchAlbums","page","handleViewBy","history","search","value","sortBy","viewBy","handleSortBy","handleSearchBy","searchBy","isFetchingData","albumsFetched","params","qs","location","numAlbums","numPages","ceil","concat","alphabeticalComparator","toLowerCase","timeComparator","datetime","albumView","filter","sort","reverse","ButtonGroup","FormControl","placeholder","onChange","event","ButtonToolbar","ToggleButtonGroup","type","name","defaultValue","ToggleButton","withRouter","Callback","handleLogin","hash","combinedHash","substring","parse","ImgurAlbumViewWaterfall","ImgurAlbumView","match","App","fetchMyAccount","request","client_id","redirect_uri","uri","requestToken","remember","loggedIn","hasAccessToken","Navbar","bg","Brand","Nav","Link","path","to","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12544229.chunk.js","sourcesContent":["import React from 'react';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\n\nclass ReactDropdown extends React.Component {\n\n    render() {\n        var title = this.props.title;\n        var variant = this.props.variant ? this.props.variant : \"secondary\";\n        var currentEventKey = this.props.currentEventKey ? this.props.currentEventKey : \"1\";\n        var valueSetter = this.props.valueSetter;\n        var items = this.props.items;\n        var i = 1;\n        var dropdownItems = [];\n        for (let iter = 0; iter < items.length; iter++) {\n            let item = items[iter];\n            dropdownItems.push(\n                <Dropdown.Item onSelect={valueSetter}\n                    eventKey={String(i)}\n                    key={String(i)}\n                    active={currentEventKey === String(i)}>\n                    {item}\n                </Dropdown.Item>\n            )\n            i++;\n        }\n        return (\n            <DropdownButton\n                title={title}\n                variant={variant}\n                id={`${title}-dropdown`}\n            >\n                {dropdownItems}\n            </DropdownButton >\n        );\n    }\n}\n\nexport default ReactDropdown;\n","import React from 'react';\nimport { Accordion, Card, Row, Col, Container, Modal, Button, Image, Figure } from 'react-bootstrap';\nimport * as OAuth from '@zalando/oauth2-client-js';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nclass ImgurAccordion extends React.Component {\n\n  imgur = new OAuth.Provider({\n    id: 'imgur',   // required\n    authorization_url: 'https://api.imgur.com/oauth2/authorize' // required\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenWidth: window.innerWidth,\n      currAlbum: null\n    }\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  getAccessHeaders = () => {\n    var accessToken = this.imgur.getAccessToken();\n    return {\n      'Authorization': `Bearer ${accessToken}`\n    };\n  }\n\n  fetchAlbum = (albumHash) => {\n    var url = `https://api.imgur.com/3/album/${albumHash}`;\n    return fetch(url, { headers: this.getAccessHeaders() });\n  }\n\n  handleAlbumClick = (id, e) => {\n    e.preventDefault();\n    this.fetchAlbum(id)\n      .then(\n        res => res.json()\n      )\n      .then(\n        (result) => {\n          this.setState({ currAlbum: result.data });\n          scrollIntoView(document.getElementById(id));\n        }, (error) => {\n          console.log(error);\n        }\n      )\n  }\n\n  generateImageBlocks = (images) => {\n    function gen4() {\n      return Math.random().toString(16).slice(-4)\n    }\n\n    var screenWidth = this.state.screenWidth;\n    var cols = screenWidth > 992 ? 3 : 2;\n    var colIter = 0;\n    var imageCols = [];\n    for (let iter = 0; iter < images.length; iter++) {\n      let image = images[iter];\n      if (imageCols[colIter]) {\n        imageCols[colIter].push(image);\n      } else {\n        imageCols[colIter] = [image];\n      }\n      colIter = colIter + 1 === cols ? 0 : colIter + 1;\n    }\n\n    return imageCols.map((imageCol) => {\n      return (\n        <Col xs={12} md={6} lg={4} className=\"unpadded-col\" key={gen4()}>\n          {imageCol.map(\n            (image) => {\n              return <React.Fragment key={image.id}>\n                <Card.Img className=\"mb-3\" src={image.link} onClick={() => this.setState({ [image.id]: true })} />\n                <div><ImgurVerticallyCenteredModal image={image}\n                  show={this.state[image.id]} onHide={() => this.setState({ [image.id]: false })} />\n                </div>\n              </React.Fragment>\n            }\n          )}\n        </Col>\n      );\n    })\n  }\n\n  render() {\n    var albums = this.props.albums;\n    var cards = [];\n    var currAlbum = this.state.currAlbum;\n    if (currAlbum && albums && !albums.map(album => album.id).includes(currAlbum.id)) {\n      // Collapse all panels of accordion\n      let accordion = document.getElementsByClassName(\"accordion\")[0];\n      for (let iter = 0; iter < accordion.children.length; iter++) {\n        let card = accordion.children[iter];\n        card.getElementsByClassName(\"collapse\")[0].classList.remove(\"show\");\n      }\n    }\n    for (let iter = 0; iter < albums.length; iter++) {\n      let album = albums[iter];\n      let images = null;\n      if (currAlbum && album.id === currAlbum.id) {\n        images = currAlbum.images;\n      }\n      cards.push(\n        <Card key={album.id}>\n          <Accordion.Toggle id={album.id} onClick={(e) => this.handleAlbumClick(album.id, e)} as={Card.Header} eventKey={album.id}>\n            <Container>\n              <Row>\n                <Col xs={8}>\n                  <Row>\n                    <Figure.Image\n                      className=\"cover-icon\"\n                      width={32}\n                      height={32}\n                      src={`https://imgur.com/${album.cover}.jpg`}\n                      fluid={false}\n                    />\n                    {album.title}\n                  </Row>\n                </Col>\n                <Col xs={4}><span className=\"float-right\">+</span></Col>\n              </Row>\n            </Container>\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={album.id}>\n            <Card.Body>\n              <Container>\n                <Row>\n                  {images ?\n                    this.generateImageBlocks(images, album.id)\n                    : \"Loading...\"}\n                </Row>\n              </Container>\n              <Card.Text>\n                <a target=\"_blank\" rel=\"noopener noreferrer\"\n                  href={album.link}>Click to see this album on Imgur</a>\n              </Card.Text>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      );\n    }\n    return (\n      <Accordion>\n        {cards}\n      </Accordion >\n    );\n  }\n}\n\nfunction ImgurVerticallyCenteredModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      animation={false}\n    >\n      <Modal.Body>\n        <Image src={props.image.link} className=\"img-responsive-ht\" />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ImgurAccordion;\n","export default class Utils {\n  static debounce(a, b, c) { var d, e; return function () { function h() { d = null; c || (e = a.apply(f, g)) } var f = this, g = arguments; return clearTimeout(d), d = setTimeout(h, b), c && !d && (e = a.apply(f, g)), e } }\n}\n","import React from \"react\";\nimport { Card, Row, Col, Container } from 'react-bootstrap';\nimport Utils from './Utils.js';\n\nclass ImgurGrid extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenWidth: window.innerWidth,\n      numLoadedAlbums: 10,\n      hasMore: true\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n    window.onscroll = Utils.debounce(\n      () => {\n        if (\n          window.innerHeight + document.documentElement.scrollTop\n          === document.documentElement.offsetHeight\n        ) {\n          if (this.state.numLoadedAlbums < this.props.albums.length) {\n            this.setState(function (state, props) {\n              let numLoadedAlbums = state.numLoadedAlbums;\n              return {\n                numLoadedAlbums: numLoadedAlbums + 10\n              }\n            });\n          } else {\n            this.setState({ hasMore: false });\n          }\n        }\n      }\n      , 100);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  }\n\n  generateAlbumBlocks = (albums, isWaterfall = false) => {\n    function gen4() {\n      return Math.random().toString(16).slice(-4)\n    }\n\n    var screenWidth = this.state.screenWidth;\n    var cols = screenWidth > 992 ? 3 : 2;\n    var colIter = 0;\n    var albumCols = [];\n    for (let iter = 0; iter < albums.length; iter++) {\n      let album = albums[iter];\n      if (albumCols[colIter]) {\n        albumCols[colIter].push(album);\n      } else {\n        albumCols[colIter] = [album];\n      }\n      colIter = colIter + 1 === cols ? 0 : colIter + 1;\n    }\n\n    return albumCols.map((albumCol) => {\n      return (\n        <Col xs={12} md={6} lg={4} className=\"unpadded-col\" key={gen4()}>\n          {albumCol.map(\n            (album) => {\n              return <Card className=\"mb-3\" key={album.id}>\n\n                <a href={`/imgur-album-view/albums/${album.id}`}>\n                  <Card.Img variant=\"top\"\n                    className={isWaterfall ? \"\" : \"fixed-card-img\"}\n                    src={`https://imgur.com/${album.cover}.jpg`} />\n                </a>\n                <Card.Body>\n                  <Card.Text>{album.title}</Card.Text>\n                </Card.Body>\n              </Card>\n            }\n          )}\n        </Col>\n      );\n    })\n  }\n\n  render() {\n    let albums = this.props.albums.slice(0, this.state.numLoadedAlbums);\n    let isWaterfall = this.props.waterfall;\n    return (\n\n      <Container>\n        <Row>\n          {albums ? this.generateAlbumBlocks(albums, isWaterfall) : \"Loading...\"}\n        </Row>\n      </Container>\n    );\n\n  }\n}\n\nexport default ImgurGrid;","import React from 'react';\nimport * as OAuth from '@zalando/oauth2-client-js';\nimport { ButtonToolbar, ToggleButton, ButtonGroup, ToggleButtonGroup, FormControl } from 'react-bootstrap';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ReactDropdown from './ReactDropdown';\nimport ImgurAccordion from './ImgurAccordion';\nimport ImgurGrid from './ImgurGrid';\nimport * as qs from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Utils from './Utils.js';\n\nclass ImgurAlbums extends React.Component {\n  imgur = new OAuth.Provider({\n    id: 'imgur',   // required\n    authorization_url: 'https://api.imgur.com/oauth2/authorize' // required\n  });\n\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetchingData: false,\n      albumsFetched: 0,\n      albums: [],\n      viewBy: \"2\",\n      sortBy: \"1\",\n      searchBy: null\n    }\n  }\n\n  getAccessHeaders = () => {\n    var accessToken = this.imgur.getAccessToken();\n    return {\n      'Authorization': `Bearer ${accessToken}`\n    };\n  }\n\n  fetchAlbumCount = () => {\n    var url = `https://api.imgur.com/3/account/me/albums/count`;\n    return fetch(url, { headers: this.getAccessHeaders() })\n  }\n\n  fetchAlbums = (page) => {\n    var url = `https://api.imgur.com/3/account/me/albums/${page}`;\n    return fetch(url, { headers: this.getAccessHeaders() })\n  }\n\n  componentDidMount() {\n    var params = qs.parse(this.props.location.search);\n    if (params.viewBy) {\n      this.setState({ viewBy: params.viewBy });\n    }\n    if (params.sortBy) {\n      this.setState({ sortBy: params.sortBy });\n    }\n    this.setState({ albums: [], albumsFetched: 0, isFetchingData: true });\n\n    this.fetchAlbumCount()\n      .then(\n        res => res.json()\n      )\n      .then(\n        (result) => {\n          var numAlbums = result.data;\n          var numPages = Math.ceil(numAlbums / 50);\n          for (var page = 0; page < numPages; page++) {\n            this.fetchAlbums(page)\n              .then(res => res.json())\n              .then(\n                (result) => {\n                  this.setState(\n                    function (state, props) {\n                      if (state.albumsFetched + 1 === numPages) {\n                        return {\n                          albums: state.albums.concat(result.data),\n                          albumsFetched: state.albumsFetched + 1,\n                          isFetchingData: false\n                        }\n                      } else {\n                        return {\n                          albums: state.albums.concat(result.data),\n                          albumsFetched: state.albumsFetched + 1\n                        }\n                      }\n                    });\n                }, (error) => {\n                  console.log(error);\n                }\n              );\n          }\n        }, (error) => {\n          console.log(error);\n        }\n      )\n  }\n\n  handleViewBy = (e) => {\n    this.props.history.push({\n      search: `?viewBy=${e.target.value}&sortBy=${this.state.sortBy}`\n    });\n    this.setState({ viewBy: e.target.value });\n  }\n\n  handleSortBy = (eventKey) => {\n    this.props.history.push({\n      search: `?viewBy=${this.state.viewBy}&sortBy=${eventKey}`\n    });\n    this.setState({ sortBy: eventKey });\n  }\n\n  handleSearchBy = Utils.debounce((searchBy) => {\n    this.setState({ searchBy: searchBy })\n  }, 250)\n\n  render() {\n    var alphabeticalComparator = (a, b) => {\n      return a.title.toLowerCase() < b.title.toLowerCase() ? -1 : 1;\n    };\n    var timeComparator = (a, b) => {\n      return a.datetime < b.datetime ? -1 : 1;\n    };\n    var albums = this.state.albums;\n    var albumView = <React.Fragment />;\n    if (!this.state.isFetchingData) {\n      if (this.state.searchBy) {\n        albums = albums.filter(album => album.title.toLowerCase().includes(this.state.searchBy.toLowerCase()));\n      }\n      switch (this.state.sortBy) {\n        case \"1\":\n          albums = albums.sort(alphabeticalComparator);\n          break;\n        case \"2\":\n          albums = albums.sort(alphabeticalComparator).reverse();\n          break;\n        case \"3\":\n          albums = albums.sort(timeComparator).reverse();\n          break;\n        case \"4\":\n          albums = albums.sort(timeComparator);\n          break;\n        default:\n          albumView = <React.Fragment />;\n      }\n      switch (this.state.viewBy) {\n        case \"1\":\n          albumView = <ImgurAccordion albums={albums} />;\n          break;\n        case \"2\":\n          albumView = <ImgurGrid albums={albums} />;\n          break;\n        case \"3\":\n          albumView = <ImgurGrid albums={albums} waterfall />;\n          break;\n        default:\n          albumView = <React.Fragment />;\n      }\n    }\n    return (\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col xs={6}>\n              <Row>\n                <ButtonGroup>\n                  <FormControl placeholder=\"Search\" onChange={(e) => this.handleSearchBy(e.target.value)} />\n                  <ReactDropdown title=\"Sort By\" variant=\"secondary\"\n                    valueSetter={(eventKey, event) => { this.handleSortBy(eventKey) }}\n                    currentEventKey={this.state.sortBy}\n                    items={[\"A-Z\", \"Z-A\", \"Newest\", \"Oldest\"]} />\n                </ButtonGroup>\n              </Row>\n            </Col>\n            <Col className=\"unpadded-col\" xs={6}>\n              <span className=\"float-right\">\n                <ButtonToolbar onChange={this.handleViewBy}>\n                  <ToggleButtonGroup type=\"radio\" name=\"options\" defaultValue={\"2\"} >\n                    <ToggleButton variant=\"secondary\" value={\"1\"}><i className=\"material-icons\">view_day</i></ToggleButton>\n                    <ToggleButton variant=\"secondary\" value={\"2\"}><i className=\"material-icons\">view_module</i></ToggleButton>\n                    <ToggleButton variant=\"secondary\" value={\"3\"}><i className=\"material-icons\">dashboard</i></ToggleButton>\n                  </ToggleButtonGroup>\n                </ButtonToolbar>\n              </span>\n            </Col>\n          </Row>\n        </Container>\n\n        <br />\n        {albumView}\n      </React.Fragment>\n\n    );\n  }\n}\n\nexport default withRouter(ImgurAlbums);\n","import React from 'react';\nimport * as OAuth from '@zalando/oauth2-client-js';\n\nclass Callback extends React.Component {\n\n  imgur = new OAuth.Provider({\n    id: 'imgur',   // required\n    authorization_url: 'https://api.imgur.com/oauth2/authorize' // required\n  });\n\n  constructor(props) {\n    super(props);\n    this.props.handleLogin();\n  }\n\n  componentDidMount() {\n    var search = window.location.search;\n    if (window.location.hash) {\n      var combinedHash = window.location.hash + '&' + search.substring(1, search.length);\n      this.imgur.parse(combinedHash);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment />\n    );\n  }\n}\n\nexport default Callback;\n","import React from \"react\";\nimport { Card, Row, Col, Container } from 'react-bootstrap';\n\nclass ImgurAlbumViewWaterfall extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      screenWidth: window.innerWidth\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ screenWidth: window.innerWidth });\n  }\n\n  generateImageBlocks = (images) => {\n    function gen4() {\n      return Math.random().toString(16).slice(-4)\n    }\n\n    var screenWidth = this.state.screenWidth;\n    var cols = screenWidth > 992 ? 3 : 2;\n    var colIter = 0;\n    var imageCols = [];\n    for (let iter = 0; iter < images.length; iter++) {\n      let image = images[iter];\n      if (imageCols[colIter]) {\n        imageCols[colIter].push(image);\n      } else {\n        imageCols[colIter] = [image];\n      }\n      colIter = colIter + 1 === cols ? 0 : colIter + 1;\n    }\n\n    return imageCols.map((imageCol) => {\n      return (\n        <Col xs={12} md={6} lg={4} className=\"unpadded-col\" key={gen4()}>\n          {imageCol.map(\n            (image) => {\n              return <Card className=\"mb-3\" key={image.id}>\n                <Card.Img variant=\"top\" src={image.link} />\n              </Card>\n            }\n          )}\n        </Col>\n      );\n    })\n  }\n\n  render() {\n    var images = [];\n    let album = this.props.album;\n    if (album) {\n      images = album.images;\n    }\n    return (\n      <React.Fragment>\n        {\n          album ?\n            <Container>\n              <Row>\n                <h1>{album.title}</h1>\n              </Row>\n              <Row>\n                <a target=\"_blank\" rel=\"noopener noreferrer\"\n                  href={album.link}>Click to see this album on Imgur</a>\n              </Row>\n              <br />\n              <Row>\n                {images ? this.generateImageBlocks(images) : \"Loading...\"}\n              </Row>\n            </Container > : <React.Fragment />\n        }</React.Fragment>\n    );\n  }\n}\n\nexport default ImgurAlbumViewWaterfall;","import React from 'react';\nimport * as OAuth from '@zalando/oauth2-client-js';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ImgurAlbumViewWaterfall from './ImgurAlbumViewWaterfall';\n\nclass ImgurAlbumView extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired\n  }\n\n  imgur = new OAuth.Provider({\n    id: 'imgur',   // required\n    authorization_url: 'https://api.imgur.com/oauth2/authorize' // required\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      album: null,\n      screenWidth: window.innerWidth\n    }\n  }\n\n  componentDidMount() {\n    this.fetchAlbum(this.props.match.params.id)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({ album: result.data });\n        },\n        (error) => { console.log(error); }\n      )\n  }\n\n  getAccessHeaders = () => {\n    var accessToken = this.imgur.getAccessToken();\n    return {\n      'Authorization': `Bearer ${accessToken}`\n    };\n  }\n\n  fetchAlbum = (albumHash) => {\n    var url = `https://api.imgur.com/3/album/${albumHash}`;\n    return fetch(url, { headers: this.getAccessHeaders() });\n  }\n\n  render() {\n    return <ImgurAlbumViewWaterfall album={this.state.album} />;\n  }\n}\n\nexport default withRouter(ImgurAlbumView);","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport * as OAuth from '@zalando/oauth2-client-js';\n\nimport { Nav, Navbar, Container } from 'react-bootstrap';\nimport ImgurAlbums from './ImgurAlbums';\nimport Callback from './Callback';\nimport ImgurAlbumView from './ImgurAlbumView';\n\nclass App extends React.Component {\n\n  imgur = new OAuth.Provider({\n    id: 'imgur',   // required\n    authorization_url: 'https://api.imgur.com/oauth2/authorize' // required\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false\n    }\n  }\n  fetchMyAccount = () => {\n    var accessToken = this.imgur.getAccessToken();\n    var headers = {\n      'Authorization': `Bearer ${accessToken}`\n    };\n    var url = `https://api.imgur.com/3/account/me`;\n    return fetch(url, { headers: headers })\n  }\n\n  componentDidMount() {\n    if (this.imgur.hasAccessToken()) {\n      this.fetchMyAccount().then(\n        res => res.json()\n      ).then(\n        (result) => {\n          if (result.data.error) {\n            this.handleLogin();\n          } else {\n            this.setState({ loggedIn: true })\n          }\n        },\n        (error) => { this.handleLogin(); }\n      )\n    } else {\n      this.handleLogin();\n    }\n  }\n\n  handleLogin = () => {\n    var request = new OAuth.Request({\n      client_id: 'b69efa858e8dc56',  // required\n      redirect_uri: 'https://rogershen.github.io/imgur-album-view/callback'\n    });\n\n    var uri = this.imgur.requestToken(request);\n\n    this.imgur.remember(request);\n\n    window.location.href = uri;\n  }\n\n  render() {\n    var loggedIn = this.state.loggedIn;\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand>Imgur Album View</Navbar.Brand>\n            <Nav>\n              <Nav.Link href=\"/imgur-album-view/albums\">My Albums</Nav.Link>\n            </Nav>\n          </Navbar>\n          <br />\n          <Container>\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/imgur-album-view/albums/:id\">\n                {loggedIn ? <ImgurAlbumView /> : \"Loading...\"}\n              </Route>\n              <Route path=\"/imgur-album-view/albums\">\n                {loggedIn ? <ImgurAlbums /> : \"Loading...\"}\n              </Route>\n              <Route path=\"/imgur-album-view/callback\">\n                {loggedIn ? <Redirect to=\"/imgur-album-view/albums\" /> :\n                  <Callback handleLogin={() => this.setState({ loggedIn: true })} />}\n              </Route>\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}